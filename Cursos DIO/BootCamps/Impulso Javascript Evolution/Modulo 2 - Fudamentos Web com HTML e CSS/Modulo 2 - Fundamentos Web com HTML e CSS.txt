#############################################################
PRIMEIROS PASSOS PARA DESENVOLVIMENTO WEB
#############################################################
1. O que é internet
1.1 Introdução
--------------------------------------------------------------

2. Como funciona a internet
2.2 O que são redes
Os computadores são conectadas em uma backbone - um gerenciador de conexões que interligam outras redes, outras backbones

Caminho inverso:
www
DNS
IP
Classes de redes
127.0.0.1 (local host)
---------------------------------------------------------------

3. TCP/IP, portas, roteadores, switches e modems
3.2 TCP/IP e UDP
TCP (Transmission Control Protocol), IP(Internet protocol)

4 camadas:
1. Física (ex.: placa de rede)
2. Rede (ex.: IP)
3. Transporte (ex.: TCP, UDP)
4. Aplicação (ex.:FTP, SMTP, HTTP)

UDP x TCP:
UDP - Rápido, não confiável, carro do ovo, livestream
TCP - Voltado à conexão, Handshacke, Integridade, ordem dos dados, aplicativo de mensagens de texto
------------------------------------------------------------------

3.3 Portas

Tipos:
20: FTP - apenas envio de arquivos
22: SSH - conexão segura entre dois computadores
25: SMTP - envio de emais
53: DNS - tradutora de ip para ome
80: HTTP - conexão internet
443: HTTPS - conexão internet segura
-------------------------------------------------------------------

3.4 Roteadores, switches e modems
Modem - Modulator-demodulator, modula e desmodula sinais
Roteador - Distribui internet para um ou mais dispositivos de rede
Switch - Distribui internet para um ou mais dispositivos de rede

Quais portas usadas pelo Gmail?
25: SMTP; 465: Porta SSL; 587

Quais portas usadas pelo MySQL e o Apache?
MySQL - 3306
Apache - 80 e 443
--------------------------------------------------------------------

4. Celular, internet e outros dispositivos
4.2 Dados móveis

Quanto custa, para uma operadora de telefonia móvel, enviar um SMS?
Nada!
--------------------------------------------------------------------

4.3 Wi-fi

Segurança:
WEP: chaves de 64 bits e de 128 bits
WPA: chave trocada periodicamente
WPA2 (AES) (802.11i) - + segurança e + processamento
--------------------------------------------------------------------

4.4 Bluetooth
Conexão ponta-a-ponta
--------------------------------------------------------------------

5. Browser, sites, aplicativos e webserver
5.3 Site, aplicativo e e-commerce

Site:
1. Página da Internet
2. Diversos propósitos
3. Podem ser feitas em diversas LP
4. D/XHTML caindo em desuso

Aplicativo:
1. Um software que é executado no navegador
2. Um aplicativo do celular, muitas vezes, nada mais é do que uma espécie de navegador
3. Hoje em dia, já quase não existe diferença entre site e aplicativo, e o primeiro está em declínio
4. Outra diferença terminológica que está sumindo é entre programa/software e aplicativo

E-commerce:
1. Comércio eletrônico
2. Site de compra e venda com sistema de pagamento
3. O sistema de pagamento pode ser exterior ao site
4. PicPay, Boleto, Pagseguro, etc...
---------------------------------------------------------------------

5.4 Web-server (servidores)

Tipos:
1. Estátio - servidor físicos
2. Dinámico - servidores presentes no físico: File server, application server, database)

Os dados de um site ou aplicativo precisam estar em um servidos.

O que é Web-service?
Interface disponível para fazer requisições e consultas em bancos de dados inacessíveis (Correios, Governo)
---------------------------------------------------------------------

6. O que são stacks
6.2 Stacks

O que é?
1. Pilhas de tecnologia
2. Conjunto de softwares necessários e suficientes para executar um aplicativo/programa
3. Linguages de programação
4. Ambientes e ferramentas de interação com o app/sw
5. Capacidade e limitação de performance
6. Pontos fortes e fracos do app/sw
----------------------------------------------------------------------

6.3 Definição de Front-end, Back-end e Fullstack

Front-end:
1. Site, software, aplicativo, web service
2. Interface, UI, UX
3. Lógica de programação, HTML, CSS, JQuery/JS/AJAX, PHP, Bootstrap / outros frameworks

Back-end:
1. Servidores, banco de dados
2. "meio-de-campo" entre interface e bancos de dados, regras de negócios, validações
3. MySQL, Oracle, protocolos de comunicação, PHP, Java, node.js

Full stack:
Profissional que sabe trabalhar em todas as camadas das tecnologias de desenvolvimento/execução de um app/sw
------------------------------------------------------------------------

7. LPs e termos
7.2 Principais LPs

Tops:
HTML
CSS
JavaScript (JQuery, AJAX, diversas libs)
PHP
.NET
ASP
Java
Ruby (on Rails)
Python
Perl
C/C++/C#
--------------------------------------------------------------------------

7.3 Diversos termos comuns

Termos:
404
Algoritmo
ALT - descrição texto alt
API - Funcionalidades a mais a incrementar no site
Aplicação
Back-end
Biblioteca/dll - conjunto de ferramentas
Bootstrap - Framework javascript um dos mais usados
Breakpoints
Browser
Bug
Cache
Código - Instruções em uma ou mais linguagens
Controle de versão - Softwares que contralam versões, exemplo Git e GitHub
Cookie
Debug 
Deploy - pacote que manda para ser publicado
Design adaptativo/responsivo
DNS
Documentação
Domínio
DPI
Editor de texto
Estrutura de dados
Favicon
Fontes
Framework
Front-end
FTP
Full-stack
Github/SVN/CVS
HTTP(S)
IP
Linguagem
Meta tags
Método ágil
Mobile
MVC - Module view controller
MVP - Minimal viavel product
MySQL
Pixel
Resolução
Servidor
Sistema operacional/SO
Solução
SSL
UI
UX
Versão
WYSIWYG - What you see what you get
------------------------------------------------------------------------

8. Construindo primeira aplicação

1. Precisa de um servidor web - exemplo: XAMPP

#############################################################
INTRODUÇÃO A CRIAÇÃO DE WEBSTIES COM HTML5 E CSS3
#############################################################

1. Introdução a criação de websites com HTML5 e CSS3
1.1 Estrutura básica
-------------------------------------------------------------------------

2. Entendendo o que é semântica
2.1/2 Parte 1 e 2
-------------------------------------------------------------------------

3. Como usar textos e links em HTML
3.1 Tags para textos: <p> paragrafo </p>
--------------------------------------------------------------------------

3.2 tags para links:
<a>Link</a>
<a href="linkedin.com/in/alexis_silva">Linkedin</a>
<a href="malito:alexisxzinho@hotmail.com>E-mail</a>

<a target="_blank">Link</a>
--------------------------------------------------------------------------

4. Como insetir imagens em seu site
4.1 Tag img
<img>
<img src="img/avatar.jpg"
<img alt="Foto de Alexis Matos">

--------------------------------------------------------------------------

5. Como organizar listas com HTML
5.1 Tags li, ul e ol
<ul> - a ordem não importa
item 1
item 2
<ol> a ordem importa
1. item 1
2. item 3
<li> - são os indices da lista
--------------------------------------------------------------------------

6. Introdução e conceitos básicos do CSS3
6.1 Introdução ao CSS3

Objetivos:
O que são seletores
Conceitos báiscos
Principais seletores

Regra:
a, p, h1, h3{
	color: blue;
	font-size: 14px;
}

ID x Class:
O ID só pode usar uma vez na página
ID - #header
Classs - .header
--------------------------------------------------------------------------

6.2 Conceitos básicos

Tipos:
Box model: Content - Padding (espaçamento entre borda e conteúdo) - border (circula a borda do conteúdo) - margin (o espaçamento entre elementos)
--------------------------------------------------------------------------

7. Estilizando elementos, textos e listas
7.1 Estilizando elementos

1. Box Model
 - padding: topAndBottom rightLeft |top right bottom left
1.1. Background
 - background-color: green;
 - background-image: url("bg.png")
 - background-position: top;
1.2. Border
 - largura: pixel, centímetros, milímetros
 - cor: blue, #0000ff
 - Estilo: solid, dotted, dashed
 - border: 3px solid blue
 - border-radius: 10px or 10%
---------------------------------------------------------------------------

7.2 Estilizando textos

1. font-family: Verdana [fonte inicial], Arial [backup];
2. font-size: 10px
3. font-style: normal [padrão] | italic
4. font-weight: normal [padrão] | bold
5. text-frensform: uppercase | lowercase | capitalize
6. text-decoration: underline | overline | line-through

---------------------------------------------------------------------------

7.3 Estilizando elementos, textos e listas

1. list-style-type
 - ul { list-style-type: square; } - quadrados
 - ol { list-style-type: upper-roman; } - em números romanos
 - ul { list-style-type: "/1F44D" } - icons
2. list-style-image
 - ul { list-style-image: url("rocket.png"); } - alterar por imagem
---------------------------------------------------------------------------

7.4 Propriedades de dimensões e alinhamento



1. Widht - Altura
2. Height - Largura
3. Max-width
4. Max-height
5. Margin
6. Text align

#############################################################
Posicionando elementos com Flexbox em CSS
#############################################################
1. Introdução
1.3 Introdução ao Flex Box

Flex container: Transforma todo os itens filhos em flex itens
Propriedades:
. display
. flex-direction
. flex-wrap
. flex-flow
. justify-content
. align-items
. align-content

Flex item: São os elementos filhos diretos do flex container. E também podem se tornar flex Container
Propriedades:
. flex-grow
. flex-basis
. flex-shrink
. flex
. order
. align-self
----------------------------------------------------------------------------

2.
2.1 Fundamentos do Flexbox Pt.1 - Flex Container
. display: flex (transformando os itens em flex)
. flex-direction: row(padrão: à direção do texto, esqueda para direita); row-reverse; column; column-reverse
. flex-wrap: É a propriedade que define se os itens devem ou não quebrar a linha (por padrão eles não quebram linha)
		 : nowrap (padrão: não quebra a linha); wrap (permite a quebra de linha assim que um dos flex itens não puder mais ser compactado), wrap-reverse (mesmo que o wrap, porém ao contrário, sempre se matnendo na primeira linha)
. flex-flow: um atalho para as duas propriedades(flex-direction e flex-wrap)
. justify-content: alinhamento dos itens dentro do container e a distribuição de espaçamento entre eles
			  : flex-start; flex-end; center; space-between; space-around
. align-itens: Permite o alinhamento central no eixo vertical
		   : center; strecht (padrão, crescendo igualmente); flex-start; flex-end; baseline
. align-content:  responsável pelo alinhamento vertical
			: center; stretch; flex-start; flex-end; space-between; space-around
----------------------------------------------------------------------------

2.2 Fundamentos do Flexbox Pt.2 - Flex Items