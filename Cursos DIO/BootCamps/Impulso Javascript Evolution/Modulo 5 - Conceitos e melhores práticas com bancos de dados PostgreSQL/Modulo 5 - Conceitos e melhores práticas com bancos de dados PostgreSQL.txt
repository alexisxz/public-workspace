#############################################################
Conceitos e melhores práticas com banco de dados PostgreSQL
#############################################################
1. Introdução ao banco de dados PostgreSQL
1.1 Fundamentos de banco de dados
O que são dados?
Valores brutos, fatos brutos, observações documentadas, registros soltos, que são recolhidos e armazenados sem sofrer qualquer tratamento.

O que são informações?
Estrtuturação de dados, organização de dados. Conjunto de dados relacionados entre si que geram valor, que criam sentidos aos dados. Material do conhecimento.

Modelo relacional
Modelo mais comum, que classifica e organiza as informações em tabelas com linahs e colunas. As linhas, ou tuplas, são os dados organizados, são os valores das tabelas, e as colunas são os atributos destes dados.

Tabelas
Conjunto de dados dispostos em colunas e linhas referentes a um objetivo comum. As colunas são consideradas como "compos da tabela", como atributos da tabela. As linhas de uma tabela são chamadas também de tuplas, e é onde estão contidos os valores, os dados.

O que pode ser definido como tabelas?
Coisas tangíveis - Elementos físicos (carro, produto, animal)
Funções - Perfis de usuário, status de compra
Eventos ou ocorrências - Produtos de um pedido, histórico de dados

# COLUNAS IMPORTANTES
1. Chave primária / Primary Key / PK
	Conjunto de um ou mais campos que nunca se repetem. Identidade da tabela. São utilizados como índice de referência na criação de relacionamentos entre tabelas.
2. Chave Estrangeira / Foreign Key / FK
	Valor de referência a uma PK de outras tabelas da mesma tabela para criar um relacionamento

Sistemas de gerenciamento de banco de dados
Ou Sistemas de gestão de base de dados. 
Chamamos pela sigla SGBD.
Conjunto de programas ou softwares responsáveis pelo gerenciamento de um banco de dados.
Programas que facilitam a administração de um banco de dados.

Softwares: SGBD:
Oracle
PostgreSQL
MySQL
SQL Server
mongoDB
elasticsearch
IBM DB2

O QUE É O POSTGRESQL
Sistema de gerenciamento de banco de dados objeto relacional.
Teve início no departamento de ciência da computação na Universidade da California em berkeley em 1986
Arquitetura mutiprocessos - Servidor PostgreSQL

Modelo cliente/servidor
1. Cliente
	Interface gráfica
	terminal
	aplicação
2. Servidor

Principais características:
> OpenSource
> Point in time recovery
> Linguagem procedural com suporte a várias linguagens de programação (perl, python, etc)
> Views, functions, procedures, triggers
> Consultas complexas e common table expressions (CTE)
> Suporte a dados geográficos (PostGIS)
> Controle de concorrência multi-versão
-------------------------------------------------------------------------

2. Objetos e tipos de dados do PostgreSQL
2.1 O que é o arquivo postgresql.conf
Arquivo onde estão definidas e armazenadas todas as configurações do servidor PostgreSQL. Alguns parâmetros só podem ser alterados com uma reinicialização do banco de dados. A view pg_settings, acessada por dentro do banco de dados, guarda todas as configurações atuais.

Localização do arquivo postgresql.conf
Por padrão, encontra-se dentro do diretório PGDATA definido no momento da inicialização do cluster de banco de dados

Configurações de conexão:
LISTER_ADDRESSES - Endereço(s) TCP/IP das interfaces que o servidor PostgreSQL vai escutar/liberar conexões
PORT - A porta TCP que o servidor PostgreSQL vai ouvir. O padrão é 5432
MAX_CONNECTIONS - Número máximo de conexões simultâneas no servidor PostgreSQL
SUPERUSER_RESERVED_CONNECTIONS - Números de conexões (slots) reservadas para conexões ao banco de dados de super usuários.

Configurações de autenticação
AUTHENTICATION_TIMEOUT - Tempo máximo em segundos para o cliente ocnseguir uma coneção com o servidor
PASSWORD_ENCRYPTION - Algoritmo de criptografia das senahs dos novos usuários criados no banco de dados.
SSL - Habilita a conexão criptografada por SSL (Somente se o PostgreSQL foi compilado com suporte SSL)

Configurações de memória
SHARED_BUFFERS - Tamanho da memória compartilhada do servidor PostgreSQL para cache/buffer de tabelas, índices e demais relações.
WORK_MEM - Tamanho da memória para operações de agrupamento e ordenação (ORDER BY, DISTINCT, MERGE JOINS)
MAINTENANCE_WORK_MEM - Tamanho da memória para operações como VACUUM, INDEX, ALTER, TABLE.

1. O arquivo pg_hba.conf
Arquivos responsável pelo controle de autenticação dos usuários no servidor PostgreSQL
> Métodos de autenticação:
TRUST (conexão sem requisição de senha)
REJECT (Rejeitas conexões)
MD5 (Criptografia md5)
PASSWORD (senha sem criptografia)
GSS (generic security service application program interface)
SSPI (security support proider interface - somente para Windows)
KRB5 (kerberos V5)
IDENT (utiliza o usuário do sistema operaional do cliente via ident server)
PEER (utiliza o usuário do sistema operacional do cliente)
LDAP (ldap server)
RADIU (radiu server)
CERT (autenticação via certificado ssl do cliente)
PAM (pluggable authentication modules)

2. o arquivo pg_ident.conf
Arquivo responsável por mapear os usuários do sistema operacional com os usuários do banco de dados.
Localizado no diretório de dados PGDATa de sua instalação.
A opção ident deve ser utulizado no arquivo pg_hba.conf

3. Comandos administrativos
Binários do PostgreSQL
> createdb
> createuser
> dropdb
> dropuser
> initdb
> pg_ctl
> pg_basebackup
> pg_dump / pg_dumpall
> pg_restore
> psql
> reindexdb
> vacuumdb

4. Cluster
Coleção de bancos de dados que compartilham as mesmas configurações (arquivos de configuração) do PostgreSQL e do sistema operacional (porta, listen_addresses, etc)

5. Banco de dados(database)
Conjunto de schemas com seus objetos/relações (tabelas, funções, views, etc)
> Schema - Conjunto de objetos/relações (tabelas, funções, views, etc).
-------------------------------------------------------------------------

2.2 Conheça a ferramente PGAdmin
Importante para coneção:
1. Liberar acesso ao cluster em postgresql.conf
2. Liberar acesso ao cluster para o usuário do banco de dados em pg_hba.conf
3. Criar/editar usuários
-------------------------------------------------------------------------

2.3 Como administrar usuários no banco de dados
users/roles/groups
CREATE ROLE name [[WITH] option [...]]
where:
> SUPERUSER | NOSUPERUSER
> CREATEDB | NONCREATEDB
> CREATEROLE | NOCREATEROLE
> INHERIT | NOINHERIT
> LOGIN | NOLOGIN
> REPLICATION | NOREPLICATION
> BYPASSRLS | NOBYPASSRLS
> CONECCTION LIMIT connlimit
> [ ENCRYPTED ] PASSWORD 'password' | PASSWORD NULL
> VALID UNTIL 'timestamp'
> IN ROLE role_name [, ...]
> IN GROUP role_name [...]
> ROLE role_name [,...]
> ADMIN role_name [, ...]
> USER role_name [,...]
> SYSID uid

Associação entre roles
Quando uma role assume as permisões de outra role.
Necessário a opção INHERIT
> IN ROLE (passa a pertencer a role informada)
> ROLE (a role informada passa a pertencer a nova role)
Ou após a criação da role:
> GRANT [role a ser concedida] TO [role a asusmir as permissões]

Desassociar membros entre roles
> REVOKE [role que será revogada] FROM [role que terá suas permissões revogadas]
> REVOKE professores FROM daniel; [exemplo]
Alterando uma role
ALTER ROLE role_specification [WITH] option [...]

Excluindo uma role:
DROP ROLE role_specification

3. Administrando acessos (GRANT)
São os privilégios de acesso aos objetos do banco de dados.

Privilégios:
-- tabela
-- coluna
-- sequence
-- database
-- domain
-- foreign data wrapper
-- foreign server
-- function
-- language
-- large object
-- schema
-- tablespace
-- type
-------------------------------------------------------------------------

2.4 Objetos e comandos do banco de dados
Database - Banco de dados, Grupos de schmes e seus objetos
Schemas - É um grupo de objetos, como tabelas, types, views, funções, entre outros.
Objetos - São as tabelas, views, funções, types, sequences, entre outros.

Database commands:
CREATE DATABASE name
ALTER DATABASE name RENAME TO new_name
DROP DATABASE[nome]

Schema commands:
CREATE SCHEMA schema_name [AUTHORIZATION role_especification]
ALTER SCHEMA name RENAME TO new_name
DROP SCHEMA [nome]
Melhores práticas:
CREATE SCHEMA IF NOT EXISTS schema_name [AUTHORIZATION role_specification]
DROP SCHEMA IF EXISTS [nome]

2. Tabelas, colunas e tipos de dados
Conjuntos de dados dispostos em colunas e linhas referentes a um objetivo comum.

3. Primary Key / PK
Não pode haver duas ocorrências de uma mesma entidade com o mesmo conteúdo na PK
A chave primária não pode ser composta por atributo opcional, ou seja, atributo que aceite nulo.
Os atributos identificadores devem ser o conjunto mínimo que pode identificar cada instância de uma entidade
Não devem ser usadas chaves externas
Não deve conter informação volátil

4. Foreign Key / FK
Campo, ou conjunto de campos que são referências de chavaes primárias de outras tabelas ou da mesma tabela.
Sua principal função é garantir a integridade referencial entre tabelas

5. Tipos de dados:
Numeric Types
Monetary Types
Character Types
Binary Data Types
Date/Time types
... Varios outros

6. DML e DDL
DML
Data Manipulation Language
INSERT, UPDATE, DELETE, SELECT

DDL
Data Definition Language
CREATE, ALTER, DROP
CREATE [objeto] [nome do objeto] [opção];
ALTER DATABASE dadosbancarios ONWER TO diretoria;
CREATE TABLE IF NOT EXISTS banco (
	codigo INTEGER PRIMARY KEY,
	nome VARCHAR(50) NOT NULL,
	data_criacao TIMESTAMP NOT NULL DEFAULT NOW()
);




